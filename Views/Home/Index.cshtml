@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@if (SignInManager.IsSignedIn(User))
{
    <script>

<!--Forward Authenticated User to Protected Content-- >

            function authUserToProtectedContent() {
                window.location.href = '/Clockin/Index';
            }

authUserToProtectedContent();

    </script>
}
@{
    ViewData["Title"] = "Home Page";
}
<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        <li data-target="#myCarousel" data-slide-to="3"></li>
        <li data-target="#myCarousel" data-slide-to="4"></li>
        <li data-target="#myCarousel" data-slide-to="5"></li>
        <li data-target="#myCarousel" data-slide-to="6"></li>
        <li data-target="#myCarousel" data-slide-to="7"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active" id="openingSlide">
            <img src="~/images/Profile.png" alt="Visual Studio" class="img-responsive" />
            <h1 class="carousel-title">Welcome to my developer story!</h1>
            <div class="carousel-content" role="option">
            </div>
            <div class="carousel-caption" role="option">
                <h1>Front end fanatic - Web and mobile</h1>
                <h1>Back end guru - Python, C#</h1>
                <h1>Software Engineer</h1>
            </div>

        </div>
        <div class="item" id="swipe360Slide">
            <img src="~/images/SlideSwipe360.png" alt="Freelance Slide" class="img-responsive" />
            <div class="carousel-caption" role="option">
            </div>
        </div>
        <div class="item" id="slideESF">
            <img src="~/images/SlideESF.png" alt="ESF Slide" class="img-responsive" />
            <div class="carousel-caption" role="option">
            </div>
        </div>
        <div class="item" id="prontoSlide">
            <img src="~/images/ProntoSlide.png" alt="Pronto Slide" class="img-responsive" />
            <div class="carousel-caption" role="option"></div>
        </div>
        <div class="item" id="freelancerSlide">
            <img src="~/images/SlideNew.png" alt="New freelancer slide" class="img-responsive" />
            <div class="carousel-caption" role="option"></div>
        </div>
        <div class="item" id="slideComparison">
            <img src="~/images/SlideComparison.png" alt="Comparison slide" class="img-responsive" />
            <div class="carousel-caption" role="option"></div>
        </div>
        <div class="item" id="sqlServerSlide">
            <img src="~/images/SqlServerSlide.png" alt="Comparison slide" class="img-responsive" />
            <div class="carousel-caption" role="option"></div>
        </div>
        <div class="item" id="conclusionSlide">
            <img src="~/images/ConclusionSlide.png" alt="Comparison slide" class="img-responsive" />
            <div class="carousel-caption" role="option"></div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
<div class="text-center">
    <p>
        Hit play for audio
    </p>
    <audio id="audioPlayer" autoplay controls>
        <source src="~/dopeTrapBeat9.mp3" type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>
    <p id="storyLine">
        Hi, I'm Ryan Dines, and welcome to my story.  My first programming experience was writing an encryption program for the military.  I also wrote a fairly large program in college that did circuit analysis using C++.  When I realized that I didn't want to be an electrical engineer after actually working in the field, I thought back to those experiences and decided to pursue software development.
    </p>
</div>
<style>
    .carousel-content {
        position: absolute;
        top: 20%;
        left: 17%;
        z-index: 20;
        color: white;
        text-shadow: 0 1px 2px rgba(0,0,0,.6);
    }

    .carousel-title {
        position: absolute;
        top: 10%;
        left: 28%;
        z-index: 30;
        color: white;
        text-shadow: 0 1px 2px rgba(0,0,0,.6);
    }
</style>
@section scripts 
{
<script>$('#myCarousel').on('slide.bs.carousel', function(event) {
        if (event.relatedTarget.id == "swipe360Slide") {
            $("#storyLine").text("I learned Swift first, which was newly released by Apple to make native iOS applications.  I did tutorial after tutorial, and eventually went with making a game.  Once I made my first animation I was hooked.  Swift has a very elegant approach to multiple inheritences, a new paradigm called protocol-oriented programming, which makes code easier to read and understand.");
        }
        if (event.relatedTarget.id == "slideESF") {
            $("#storyLine").text("Then it was time to get a real job.  I found a company that was using Swift on the front end to make applications that determine the value of solar installations.  Heavy on math, related to electrical engineering, and using the only language that I knew really well, ESF was a perfect fit.  After a while, the data mining operation needed help so I learned python and scraped data from energy companies.  We eventually had to build out a system to go from development to production, so I became the defacto Linux and version control expert.  The CEO was obsessed with security so I spent months adding layers of security to our servers.  Finally, the backend dev quit and I learned how to build a REST API using Django.");
        }
        if (event.relatedTarget.id == "prontoSlide") {
            $("#storyLine").text("Next fate had me link up with ProntoProgress.  I had to take electrical engineering software used by a company called ServiceWire and translate it from Silverlight into HTML 5.  So I went from a front-end mobile developer with an Apple background to full stack Microsoft web development.  I had to learn brand new tech fast, and understand old tech, so that I could translate SOAP webservices into REST using C# and WebApi.  After that I learned the front end (HTML/CSS/JavaScript) using MVC 5 with jQuery and KendoUI.");
        }
        if (event.relatedTarget.id == "freelancerSlide") {
            $("#storyLine").text("On my own, I continued to learn web and mobile development, and wrote my website https://seniordevops.com in python/Django.  I basically imitated the software used to track hours at ProntoProgress, with the end goal of starting my own software consulting company some day.  I wanted to check out this new tech called ReactNative, so also wrote a cross-platform mobile version of the same software.  In the process of building my website, I realized that I needed a cheap way of sending email.  Setting up an SMTP server to serve email with a low SPAM score is something that took us weeks at my first employer, so I really preffered an out of the box convenient solution.  I ended up signing up for AWS and have been in love with that tech ever since.  I can deploy EC2 instances and databases all day long, which is great for practicing things like SQLServer.  BootStrap is another tech that I fell in love with while writing my website; it far outshines KendoUI, except maybe the data tables are little weak in BootStrap.  Finally, have been going hard on the React tutorials for web.");
        }
        if (event.relatedTarget.id == "slideComparison") {
            $("#storyLine").text("At some point I had to circle back to the get a real job concept, and I knew web was where my heart was.  I felt like python/Django was easier to understand, and more well adapted to emerging fields like AI, yet around here everyone was hiring for ASP.NET.  So I started using ASP.NET Core to sharpen my C# skills in hopes of gainful employment.  We were using .NET 4.5 at ProntoProgress, which is lame to write new software on an outdated technology stack.  The new tech .NET Core turned out to have many of the features that I loved about Django, only better.  Robust authentication scaffolding, React/Redux templates, and an even better ORM than Django.  Plus the framework can hook up to PostgreSQL. Blows my mind how much better MS software became between 4.5 and 4.6.");
        }
        if (event.relatedTarget.id == "sqlServerSlide") {
            $("#storyLine").text("From talking to prospective employers, I knew that I had to be able to use SQLServer and stored procedures, as most legacy software does not use an ORM, so I deployed a SqlServer instance on AWS and made a REST-API with the stored procedures approach.  I also published some of my findings on medium.com.");
        }
        if (event.relatedTarget.id == "conclusionSlide") {
            $("#storyLine").text("Alas, my days of exploring new technology may be coming to a close.  I received my first offer from a company using .NET, so I plan on translating my django website into React/Redux with .NET backend.  Using the .NET ORM will be good practice for my new position.  React sometimes makes me feel like a mad scientist with all the little pieces that make it work, but I think it might be the future of software development because you can reuse a lot of the code between web and mobile.  I start my new job September 4th, but if someone comes in with a higher offer before then I will probably go with them.  Click register to bid on my being your next employee, or if I get an offer I will post it in the private authenticated portion of the website.");
        }
});
var myAudio = $('#audioPlayer')[0].childNodes[1].src;
console.log(myAudio);</script>
}
